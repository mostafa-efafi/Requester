// Mocks generated by Mockito 5.3.2 from annotations
// in requester/test/features/feature_requester/data/data_source/remote/api_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:requester/core/resource/data_state.dart' as _i4;
import 'package:requester/core/rest/network_checker.dart' as _i3;
import 'package:requester/core/rest/rest_api.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkChecker_1 extends _i1.SmartFake
    implements _i3.NetworkChecker {
  _FakeNetworkChecker_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_2<T> extends _i1.SmartFake implements _i4.DataState<T> {
  _FakeDataState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestApi extends _i1.Mock implements _i5.RestApi {
  MockRestApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  _i3.NetworkChecker get networkChecker => (super.noSuchMethod(
        Invocation.getter(#networkChecker),
        returnValue: _FakeNetworkChecker_1(
          this,
          Invocation.getter(#networkChecker),
        ),
      ) as _i3.NetworkChecker);
  @override
  _i6.Future<_i4.DataState<_i2.Response<dynamic>>> request(
    String? url, {
    _i5.RequestType? requestType = _i5.RequestType.getRequest,
    dynamic body,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #requestType: requestType,
            #body: body,
            #headers: headers,
          },
        ),
        returnValue: _i6.Future<_i4.DataState<_i2.Response<dynamic>>>.value(
            _FakeDataState_2<_i2.Response<dynamic>>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #requestType: requestType,
              #body: body,
              #headers: headers,
            },
          ),
        )),
      ) as _i6.Future<_i4.DataState<_i2.Response<dynamic>>>);
  @override
  String makeAlerts({_i2.Response<dynamic>? response}) => (super.noSuchMethod(
        Invocation.method(
          #makeAlerts,
          [],
          {#response: response},
        ),
        returnValue: '',
      ) as String);
}
